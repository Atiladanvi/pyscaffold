[metadata]
name = PyScaffold
summary = Tool for easily putting up the scaffold of a Python project
author = Florian Wilhelm
author-email = Florian.Wilhelm@blue-yonder.com
license = new BSD
home-page = http://pyscaffold.readthedocs.org/
description-file = README.rst
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers = Development Status :: 5 - Production/Stable,
              Topic :: Utilities,
              Programming Language :: Python,
              Programming Language :: Python :: 2,
              Programming Language :: Python :: 2.7,
              Programming Language :: Python :: 3,
              Programming Language :: Python :: 3.3,
              Programming Language :: Python :: 3.4,
              Environment :: Console,
              Intended Audience :: Developers,
              License :: OSI Approved :: BSD License,
              Operating System :: POSIX :: Linux,
              Operating System :: Unix,
              Operating System :: MacOS,
              Operating System :: Microsoft :: Windows

[entry_points]
console_scripts =
    putup = pyscaffold_old.runner:run

[files]
packages =
    pyscaffold_old
data_files =
    share/pyscaffold_old = docs/*

[extras]
# Add here additional requirements for extra features, like:
# PDF = ReportLab>=1.2, RXP
ALL =
    django
    cookiecutter

[pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts = tests
    --cov pyscaffold_old --cov-report term-missing
    --verbose

[aliases]
test = pytest

[bdist_wheel]
universal = 1
